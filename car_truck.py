# -*- coding: utf-8 -*-
"""car_truck.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e5ibwKRq2nnuoS-9atRvi5ztDoKLCEwl
"""

import numpy as np

import tensorflow as tf

from keras.models import Sequential

from keras.layers import Dense,Dropout,Flatten,MaxPooling2D,Activation

from keras.layers.convolutional import Convolution2D

from keras.optimizers import Adam

from keras.preprocessing.image import ImageDataGenerator
# ImageDataGenerator : generate tensor images by doing image augmentation.

from keras.preprocessing.image import img_to_array,array_to_img,load_img
# Load_img : load images into PIL format.
# img_to_array : convert PIL image to numpy array.

from keras.utils import np_utils
#for categorical variables.

from PIL import Image
import io

model=Sequential()

model.add(Convolution2D(filters=64,
                        kernel_size=(3,3), 
                        activation='relu',
                   input_shape=(64, 64, 3)
                       ))

model.add(MaxPooling2D(pool_size=(2, 2)))

model.add(Flatten())

model.add(Dense(units=1, activation='sigmoid'))

model.summary()

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True)
test_datagen = ImageDataGenerator(rescale=1./255)
training_set = train_datagen.flow_from_directory(
        '/python/Datasets/training',
        target_size=(64, 64),
        batch_size=32,
        class_mode='binary')
test_set = test_datagen.flow_from_directory(
         '/python/Datasets/testing',
        target_size=(64, 64),
        batch_size=32,
        class_mode='binary')
history=model.fit(
        training_set,
        steps_per_epoch=15,
        epochs=10,
        validation_data=test_set,
        validation_steps=8)
import sys
sys.stdout=open("test.txt","w")
print(int(history.history['accuracy'][-1] * 100)) 
sys.stdout.close()
